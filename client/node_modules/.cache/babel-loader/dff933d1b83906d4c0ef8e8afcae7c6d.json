{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18608\\\\Documents\\\\GitHub\\\\husky-hangout\\\\client\\\\src\\\\components\\\\Events\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\nimport Arrow from \"react-arrows\";\nimport hockey from \"../Events/assets/images/hockey.png\";\nimport useScreenSize from \"../../hooks/screenSize/useScreenSize\";\nimport { QUERY_EVENTS } from \"../../utils/queries\";\nimport { useQuery } from \"@apollo/client\"; // const getItems = () =>\n//   Array(10)\n//     .fill(0)\n//     .map((_, ind) => ({ id: `${ind}`}));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventsMobile() {\n  _s();\n\n  const {\n    isDesktop\n  } = useScreenSize(); // const [items, setItem] = useState(getItems);\n\n  const [selected, setSelected] = useState([]); // const [position, setPosition] = React.useState(0);\n\n  const {\n    data\n  } = useQuery(QUERY_EVENTS);\n\n  const isItemSelected = id => !!selected.find(el => el === id);\n\n  const events = (data === null || data === void 0 ? void 0 : data.events) || []; //   console.log(events);\n\n  const handleClick = id => _ref => {\n    let {\n      getItemById,\n      scrollToItem\n    } = _ref;\n    const itemSelected = isItemSelected(id);\n    setSelected(currentSelected => itemSelected ? currentSelected.filter(el => el !== id) : currentSelected.concat(id));\n  };\n\n  return !isDesktop && /*#__PURE__*/_jsxDEV(ScrollMenu, {\n    LeftArrow: LeftArrow,\n    RightArrow: RightArrow,\n    children: events.map(_ref2 => {\n      let {\n        eventName,\n        eventDate,\n        eventText,\n        createdAt,\n        username,\n        attending,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        itemId: id,\n        eventName: eventName,\n        eventDate: eventDate,\n        eventText: eventText,\n        createdAt: createdAt,\n        username: username,\n        attending: attending,\n        onClick: handleClick(id),\n        selected: isItemSelected(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EventsMobile, \"VnCIvctPf3X7PjnpnuVdrerd1AM=\", false, function () {\n  return [useScreenSize, useQuery];\n});\n\n_c = EventsMobile;\n\nfunction LeftArrow() {\n  _s2();\n\n  const {\n    isDesktop\n  } = useScreenSize();\n  const {\n    isFirstItemVisible,\n    scrollPrev\n  } = React.useContext(VisibilityContext);\n  return !isDesktop && /*#__PURE__*/_jsxDEV(Arrow, {\n    disabled: isFirstItemVisible,\n    onClick: () => scrollPrev(),\n    children: \"Left\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(LeftArrow, \"dZ5ckmvDTMPMSKw20tsNT69Ct8g=\", false, function () {\n  return [useScreenSize];\n});\n\n_c2 = LeftArrow;\n\nfunction RightArrow() {\n  _s3();\n\n  const {\n    isDesktop\n  } = useScreenSize();\n  const {\n    isLastItemVisible,\n    scrollNext\n  } = React.useContext(VisibilityContext);\n  return !isDesktop && /*#__PURE__*/_jsxDEV(Arrow, {\n    disabled: isLastItemVisible,\n    onClick: () => scrollNext(),\n    children: \"Right\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n\n_s3(RightArrow, \"ibpwUS0nW79FmnSq5HQrlim57X4=\", false, function () {\n  return [useScreenSize];\n});\n\n_c3 = RightArrow;\n\nfunction Card(_ref3) {\n  _s4();\n\n  let {\n    onClick,\n    selected,\n    eventName,\n    eventDate,\n    eventText,\n    createdAt,\n    username,\n    attending,\n    itemId,\n    key\n  } = _ref3;\n  const [img, setImg] = useState();\n  const visibility = React.useContext(VisibilityContext); // console.log({ myImg })\n\n  const {\n    isDesktop\n  } = useScreenSize();\n  useEffect(() => {\n    switch (eventName) {\n      case \"hockey\":\n        setImg(hockey);\n        break;\n\n      default:\n        console.error(\"no image found!\");\n    }\n  }, []);\n  return !isDesktop && /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => onClick(visibility),\n    style: {\n      width: \"400px\"\n    },\n    tabIndex: 0,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: eventName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"\",\n          className: \"event-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description-align\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eventDescription\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text\",\n          children: eventText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attending\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"EventDate: \", eventDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Attending: \", attending]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"visible: \", JSON.stringify(!!visibility.isItemVisible(itemId))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"selected: \", JSON.stringify(!!selected)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Created At: \", createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 7\n  }, this);\n}\n\n_s4(Card, \"+EHSCnkyqWoKa4mF3H1Bcz/XV9A=\", false, function () {\n  return [useScreenSize];\n});\n\n_c4 = Card;\nexport default EventsMobile;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EventsMobile\");\n$RefreshReg$(_c2, \"LeftArrow\");\n$RefreshReg$(_c3, \"RightArrow\");\n$RefreshReg$(_c4, \"Card\");","map":{"version":3,"sources":["C:/Users/18608/Documents/GitHub/husky-hangout/client/src/components/Events/index.js"],"names":["React","useEffect","useState","ScrollMenu","VisibilityContext","Arrow","hockey","useScreenSize","QUERY_EVENTS","useQuery","EventsMobile","isDesktop","selected","setSelected","data","isItemSelected","id","find","el","events","handleClick","getItemById","scrollToItem","itemSelected","currentSelected","filter","concat","LeftArrow","RightArrow","map","eventName","eventDate","eventText","createdAt","username","attending","isFirstItemVisible","scrollPrev","useContext","isLastItemVisible","scrollNext","Card","onClick","itemId","key","img","setImg","visibility","console","error","width","JSON","stringify","isItemVisible","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\nimport Arrow from \"react-arrows\";\r\nimport hockey from \"../Events/assets/images/hockey.png\";\r\nimport useScreenSize from \"../../hooks/screenSize/useScreenSize\";\r\nimport { QUERY_EVENTS } from \"../../utils/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\n// const getItems = () =>\r\n//   Array(10)\r\n//     .fill(0)\r\n//     .map((_, ind) => ({ id: `${ind}`}));\r\n\r\nfunction EventsMobile() {\r\n  const { isDesktop } = useScreenSize();\r\n  // const [items, setItem] = useState(getItems);\r\n  const [selected, setSelected] = useState([]);\r\n  // const [position, setPosition] = React.useState(0);\r\n  const { data } = useQuery(QUERY_EVENTS);\r\n  const isItemSelected = (id) => !!selected.find((el) => el === id);\r\n\r\n  const events = data?.events || [];\r\n  //   console.log(events);\r\n\r\n  const handleClick =\r\n    (id) =>\r\n    ({ getItemById, scrollToItem }) => {\r\n      const itemSelected = isItemSelected(id);\r\n\r\n      setSelected((currentSelected) =>\r\n        itemSelected\r\n          ? currentSelected.filter((el) => el !== id)\r\n          : currentSelected.concat(id)\r\n      );\r\n    };\r\n  return (\r\n    !isDesktop && (\r\n      <ScrollMenu LeftArrow={LeftArrow} RightArrow={RightArrow}>\r\n        {events.map(\r\n          ({\r\n            eventName,\r\n            eventDate,\r\n            eventText,\r\n            createdAt,\r\n            username,\r\n            attending,\r\n            id,\r\n          }) => {\r\n            return (\r\n              <Card   \r\n                key={id}             \r\n                itemId={id}\r\n                eventName={eventName}\r\n                eventDate={eventDate}\r\n                eventText={eventText}\r\n                createdAt={createdAt}\r\n                username={username}\r\n                attending={attending}\r\n                onClick={handleClick(id)}\r\n                selected={isItemSelected(id)}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </ScrollMenu>\r\n    )\r\n  );\r\n}\r\n\r\nfunction LeftArrow() {\r\n  const { isDesktop } = useScreenSize();\r\n  const { isFirstItemVisible, scrollPrev } =\r\n    React.useContext(VisibilityContext);\r\n\r\n  return (\r\n    !isDesktop && (\r\n      <Arrow disabled={isFirstItemVisible} onClick={() => scrollPrev()}>\r\n        Left\r\n      </Arrow>\r\n    )\r\n  );\r\n}\r\n\r\nfunction RightArrow() {\r\n  const { isDesktop } = useScreenSize();\r\n  const { isLastItemVisible, scrollNext } = React.useContext(VisibilityContext);\r\n\r\n  return (\r\n    !isDesktop && (\r\n      <Arrow disabled={isLastItemVisible} onClick={() => scrollNext()}>\r\n        Right\r\n      </Arrow>\r\n    )\r\n  );\r\n}\r\n\r\nfunction Card({\r\n  onClick,\r\n  selected,\r\n  eventName,\r\n  eventDate,\r\n  eventText,\r\n  createdAt,\r\n  username,\r\n  attending,\r\n  itemId,\r\n  key\r\n}) {\r\n  const [img, setImg] = useState();\r\n\r\n  const visibility = React.useContext(VisibilityContext);\r\n  // console.log({ myImg })\r\n  const { isDesktop } = useScreenSize();\r\n  useEffect(() => {\r\n    switch (eventName) {\r\n      case \"hockey\":\r\n        setImg(hockey);\r\n        break;\r\n      default:\r\n        console.error(\"no image found!\");\r\n    }\r\n  }, []);\r\n  return (\r\n    !isDesktop && (\r\n      <div\r\n      key={key}\r\n        onClick={() => onClick(visibility)}\r\n        style={{\r\n          width: \"400px\",\r\n        }}\r\n        tabIndex={0}\r\n      >\r\n        <div className=\"event-card\">\r\n          <div className=\"event-title\">\r\n            <h2>{eventName}</h2>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <img src={img} alt=\"\" className=\"event-image\"></img>\r\n          </div>\r\n          <div className=\"description-align\">\r\n            <h3>{username}</h3>\r\n          </div>\r\n          <div className=\"eventDescription\">\r\n            <h5 className=\"text\">{eventText}</h5>\r\n          </div>\r\n          <div className=\"attending\">\r\n            <h5>EventDate: {eventDate}</h5>\r\n            <h5>Attending: {attending}</h5>\r\n          </div>\r\n          <div>\r\n            visible: {JSON.stringify(!!visibility.isItemVisible(itemId))}\r\n          </div>\r\n          <div>selected: {JSON.stringify(!!selected)}</div>\r\n          <div>Created At: {createdAt}</div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            height: \"200px\",\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default EventsMobile;\r\n"]},"metadata":{},"sourceType":"module"}